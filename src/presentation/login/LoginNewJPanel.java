package presentation.login;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
//package medical.system;

import business.DB4OUtil.DB4OUtil;
import business.EcoSystem;
import business.enterprise.Enterprise;
import business.enterprise.NGOEnterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.restaurant.RestaurantWorkerOrganization;
import business.userAccount.UserAccount;
import business.util.food.Food;
import business.util.request.RequestStatus;
import business.util.validation.Validation;
import business.workQueue.CollectionWorkRequest;
import business.workQueue.WorkRequest;

import javax.swing.*;
import java.awt.*;

/**
 * @author Rishabh
 */
public class LoginNewJPanel extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form MianJFrame
     */

    private final int MINUTES = 2;
    public EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();


    public LoginNewJPanel() {
        JFrame.setDefaultLookAndFeelDecorated(true);
        setTitle("Food Wastage Management");
        initComponents();

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setSize((int) (screenSize.width / 1.3), (int) (screenSize.height / 1.3));
        setLocationRelativeTo(null);
        setResizable(true);
        setVisible(true);

        System.out.println((int) screenSize.width / 1.3);
        System.out.println((int) screenSize.height / 1.3);


        system = dB4OUtil.retrieveSystem();
        RequestStatus.initalizePickupRequestStatusMap();
        RequestStatus.initializeInvoiceStatusMap();
        RequestStatus.initializeShortageStatusListMap();
        Food.initializeFood();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        contentPanel.setLayout(new java.awt.CardLayout());

        loginPanel.setPreferredSize(new java.awt.Dimension(700, 600));
        loginPanel.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel1.setText("Username:");
        loginPanel.add(jLabel1);
        jLabel1.setBounds(223, 186, 37, 17);
        loginPanel.add(emailTextField);
        emailTextField.setBounds(223, 209, 256, 23);

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel3.setText("Password:");
        loginPanel.add(jLabel3);
        jLabel3.setBounds(223, 261, 66, 17);
        loginPanel.add(passwordTextField);
        passwordTextField.setBounds(223, 284, 256, 23);

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        loginPanel.add(loginButton);
        loginButton.setBounds(223, 340, 256, 44);

        jLabel4.setFont(new java.awt.Font("Krungthep", 0, 36)); // NOI18N
        jLabel4.setText("Help Feed Needy");
        loginPanel.add(jLabel4);
        jLabel4.setBounds(190, 90, 350, 47);

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        jLabel2.setText("Food Wastage Management System");
        loginPanel.add(jLabel2);
        jLabel2.setBounds(290, 130, 134, 20);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/login/res/burger.png"))); // NOI18N
        loginPanel.add(jLabel5);
        jLabel5.setBounds(290, 290, 410, 310);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/login/res/glass.png"))); // NOI18N
        loginPanel.add(jLabel6);
        jLabel6.setBounds(40, 40, 130, 130);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/login/res/vegetarian.png"))); // NOI18N
        loginPanel.add(jLabel7);
        jLabel7.setBounds(40, 230, 130, 150);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/login/res/packaging.png"))); // NOI18N
        loginPanel.add(jLabel8);
        jLabel8.setBounds(40, 430, 150, 130);

        contentPanel.add(loginPanel, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String userName = null;
        if (Validation.validateStringInput(emailTextField)) {
            userName = emailTextField.getText();
        } else {
            return;
        }

        char[] passChar = passwordTextField.getPassword();
        if (passChar == null) {
            JOptionPane.showMessageDialog(null,
                    "Input cannot be blank",
                    "Warning",
                    JOptionPane.WARNING_MESSAGE);
            passwordTextField.setBackground(Color.RED);
            return;
        }

        UserAccount ua = new UserAccount();
        String password = ua.encodePassword(String.valueOf(passChar));

        Enterprise inEnterprise = null;
        Organization inOrganization = null;

        Network network = null;

        ua = system.getUserAccountDirectory().searchUser(userName, password);

        if (ua == null) {
            for (Network n : system.getNetworkList()) {
                for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                    ua = e.getUserAccountDirectory().searchUser(userName, password);
                    if (ua == null) {
                        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                            ua = o.getUserAccountDirectory().searchUser(userName, password);
                            if (ua != null) {
                                inEnterprise = e;
                                inOrganization = o;
                                network = n;
                                break;
                            }
                        }
                    } else {
                        inEnterprise = e;
                        network = n;
                        break;
                    }
                    if (inOrganization != null) {
                        break;
                    }
                }
                if (network != null) {
                    break;
                }
            }
        }

        if (ua == null) {
            JOptionPane.showMessageDialog(null, "Invalid credentials");
            return;
        } else {
            CardLayout layout = (CardLayout) contentPanel.getLayout();
            contentPanel.add("WorkArea", ua.getRole().createWorkArea(contentPanel, ua, inOrganization, inEnterprise, system, network));
            layout.next(contentPanel);
        }
//        btnLogin.setEnabled(false);
//        btnLogout.setEnabled(true);
//        txtUserName.setEnabled(false);
//        txtPassword.setEnabled(false);

    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MainJFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify
    private javax.swing.JPanel contentPanel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPasswordField passwordTextField;
    // End of variables declaration


    @Override
    public void run() {
        while (true) {
            try {
                System.out.println("********* INSIDE PERISHABLE UPDATE *********");
                Thread.sleep(1000 * 60 * MINUTES);
                for (Network n : system.getNetworkList()) {
                    for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {

                        // Update perishable time for all the restaurant worker's work queue
                        if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.Restaurant)) {
                            for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                                if (o instanceof RestaurantWorkerOrganization) {
                                    for (UserAccount ua : o.getUserAccountDirectory().getUserAccountList()) {
                                        for (WorkRequest wr : ua.getWorkQueue().getWorkRequestList()) {
                                            CollectionWorkRequest cwr = (CollectionWorkRequest) wr;
                                            System.out.println("\n********** Updating Perishable **********");
                                            cwr.updatePerishable();
                                            System.out.println("\n ********** Update Complete **********");
                                        }
                                    }
                                }
                            }
                        }

                        // Update NGO's inventory after perishable update
                        if (e.getEnterpriseType().equals(Enterprise.EnterpriseType.NGO)) {
                            NGOEnterprise enterprise = (NGOEnterprise) e;
                            System.out.println("\nNGO name " + enterprise.getName());
                            enterprise.updateInventory();
                        }
                    }
                }
            } catch (InterruptedException ex) {
                // Thread sleep failed
            }
        }
    }
}
